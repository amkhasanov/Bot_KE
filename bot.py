import sqlite3
from datetime import datetime
import logging

import telebot
from apscheduler.executors.pool import ThreadPoolExecutor
from apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import utc, timezone
from telebot import types
from tzlocal import get_localzone

TOKEN = '5542237999:AAG1Oy8z08aEHyieytR2cL2eu22fpZ8mCag'

DB = None
BOT = telebot.TeleBot(TOKEN)
ADMIN_ID = [927060137, 304440895]


def enter_date_step(message):
    try:
        last_date = datetime.strptime(message.text, "%d.%m.%Y %H:%M").timestamp()
        cur = DB.cursor()
        cur.execute("""UPDATE chats SET 
           last_send_date=?
           WHERE chat_id=?""", (last_date, message.chat.id))
        DB.commit()
        BOT.send_message(chat_id=message.chat.id,
                         text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –¥–æ–±–∞–≤—Ç—å–µ –ø–æ–¥–ø–∏—Å—å")
        BOT.register_next_step_handler(message, enter_img_txt_step)
    except ValueError:
        BOT.register_next_step_handler(message, enter_date_step)
        BOT.send_message(chat_id=message.chat.id,
                         text="–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ø–æ –ú–°–ö: 31.12.2022 22:00")


def enter_img_txt_step(message):
    cur = DB.cursor()
    cur.execute("""SELECT last_send_date from chats WHERE chat_id=? 
               """, (message.chat.id,))
    last_date = cur.fetchone()[0]

    if message.text == None:
        cur.execute("""INSERT INTO messages(message_id, message_text, message_photo) 
               VALUES(?, ?, ?);""", (message.message_id, message.caption, message.photo[-1].file_id))
    else:
        cur.execute("""INSERT INTO messages(message_id, message_text) 
                   VALUES(?, ?);""", (message.message_id, message.text,))

    DB.commit()
    scheduled_message(message, last_date)
    BOT.send_message(chat_id=message.chat.id,
                     text="–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é - /menu")


def scheduled_message(message, last_date):
    date_scheduler = datetime.fromtimestamp(last_date, tz=timezone('Europe/Moscow'))
    tz = get_localzone()  # local timezone
    text = message.text
    caption = message.caption
    photo = message.photo[-1].file_id if text is None else None
    scheduler.add_job(sched, 'date', run_date=date_scheduler, timezone=tz,
                      args=[text, caption, photo])
    logging.info(f"–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —à–µ–¥—É–ª–µ—Ä –¥–∞—Ç–∞:{date_scheduler}")


def sched(text=None, caption=None, photo=None):
    logging.info(f"–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏")
    cursor = DB.cursor()
    sqlite_select_query = """SELECT * from chats"""
    cursor.execute(sqlite_select_query)
    records = cursor.fetchall()
    if text:
        for user in records:
            send_all_message = text
            BOT.send_message(chat_id=user[0], text=send_all_message)
    else:
        for user in records:
            send_all_message = text
            BOT.send_photo(chat_id=user[0],
                           photo=photo, caption=caption)


def send_all(message):
    if message.chat.id in ADMIN_ID:
        cursor = DB.cursor()
        sqlite_select_query = """SELECT * from chats"""
        cursor.execute(sqlite_select_query)
        records = cursor.fetchall()

        for user in records:
            send_all_message = message.text
            BOT.send_message(chat_id=user[0], text=send_all_message)
        BOT.send_message(chat_id=message.chat.id, text="–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ù–∞–∂–º–∏ /menu —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")


@BOT.message_handler(commands=['start'])
def start(message):
    insert_chat(message.chat.id, message.from_user.username)
    bot_start_message = f'–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, @{message.from_user.username} ! –ú—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ ' \
                        f'–ø—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤!\n\n' \
                        f'1Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—Ç –¥–æ 100 —Ä—É–±–ª–µ–π –∑–∞ –æ—Ç–∑—ã–≤\n' \
                        f'2Ô∏è‚É£ –ö—ç—à–±—ç–∫ –¥–æ 10% –ø—Ä–∏ –ø–æ–∫—É–ø–∫–∞—Ö –Ω–∞ KazanExpress\n' \
                        f'3Ô∏è‚É£ –î–æ—Å—Ç—É–ø –≤  –∫–∞–Ω–∞–ª —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –∏ –∞–∫—Ü–∏—è–º–∏\n\n' \
                        f'üéÅ üéÅ üéÅ\n\n' \
                        f'–ü–µ—Ä–µ–π–¥–∏ –≤ /menu –∏ –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫!'
    BOT.send_message(chat_id=message.chat.id, text=bot_start_message)


@BOT.message_handler(commands=['mailing'])
def mailing(message):
    bot_menu_message = f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—ç—à–±—ç–∫ –¥–æ 100%, –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ —Å —Ç—Ä–µ–º—è ' \
                       f'—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ @mirsee \n' \
                       f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫—ç—à–±—ç–∫ –æ—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫ –¥–æ 10% –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ ' \
                       f'–Ω–∏–∂–µ üëáüèªüëáüèªüëáüèª'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton('üéÅ –ö—ç—à–±—ç–∫ –∑–∞ –æ—Ç–∑—ã–≤ –¥–æ 100%')
    btn2 = types.KeyboardButton('üíµ –ö—ç—à–±—ç–∫ –æ—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫ 3-10%')
    btn3 = types.KeyboardButton('üì≤ –ö–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω—Å–∞–º–∏ –∞–∫—Ü–∏–π')
    btn4 = types.KeyboardButton('üí≥ –ù–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã')
    btn5 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
    btn6 = types.KeyboardButton('–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    BOT.register_next_step_handler(message, process_step)
    BOT.send_message(chat_id=message.chat.id, text=bot_menu_message, reply_markup=markup)


@BOT.message_handler(commands=['menu'])
def menu(message):
    insert_chat(message.chat.id, message.from_user.username)
    bot_menu_message = f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—ç—à–±—ç–∫ –¥–æ 100%, –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ —Å —Ç—Ä–µ–º—è ' \
                       f'—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ @mirsee \n' \
                       f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫—ç—à–±—ç–∫ –æ—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫ –¥–æ 10% –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ ' \
                       f'–Ω–∏–∂–µ üëáüèªüëáüèªüëáüèª'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton('üéÅ –ö—ç—à–±—ç–∫ –∑–∞ –æ—Ç–∑—ã–≤ –¥–æ 100%')
    btn2 = types.KeyboardButton('üíµ –ö—ç—à–±—ç–∫ –æ—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫ 3-10%')
    btn3 = types.KeyboardButton('üì≤ –ö–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω—Å–∞–º–∏ –∞–∫—Ü–∏–π')
    btn4 = types.KeyboardButton('üí≥ –ù–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã')
    btn5 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
    btn6 = types.KeyboardButton('–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    BOT.register_next_step_handler(message, process_step)
    BOT.send_message(chat_id=message.chat.id, text=bot_menu_message, reply_markup=markup)


def process_step(message):
    markup = types.ReplyKeyboardRemove()
    if message.text == 'üíµ –ö—ç—à–±—ç–∫ –æ—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫ 3-10%':
        BOT.send_message(chat_id=message.chat.id,
                         text='–°–æ–≤–µ—Ä—à–∞–π –ø–æ–∫—É–ø–∫–∏ –≤—ã–≥–æ–¥–Ω–æ!\n\n'
                              '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –≤ —Å–µ—Ä–≤–∏—Å–µ Backit (EPN) –∏ –ø–æ–ª—É—á–∞–π —Å–∫–∏–¥–∫—É –æ—Ç 3 –¥–æ 10% –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã '
                              'KazanExpress!\n\n'
                              '–°—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ http://got.by/63vjex',
                         reply_markup=markup)
        BOT.send_message(chat_id=message.chat.id,
                         text='–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ /menu')
    elif message.text == 'üí≥ –ù–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã':
        BOT.send_message(chat_id=message.chat.id,
                         text='–í—Å—Ç—É–ø–∞–π—Ç–µ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @kimmeriets —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –∞–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ '
                              '—Å–∫–∏–¥–∫–µ. –¢–∞–∫ –∂–µ —Ç–∞–º –º—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—ë–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ '
                              '–∫—É–ª–∏—Å–∞–º–∏ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã\n\n'
                              '–í –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –º—ã —Å–æ–±—Ä–∞–ª–∏ –µ—â—ë –±–æ–ª—å—à–µ —Å—Ç–∏–ª—å–Ω—ã—Ö –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤, –∑–∞—Ü–µ–Ω–∏!\n\n'
                              'https://kazanexpress.ru/mirsee - —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –∏ –∏–º–∏–¥–∂–µ–≤—ã–µ –æ—á–∫–∏. –°–∞–º—ã–π –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –Ω–∞ '
                              'KazanExpress!\n\n'
                              'https://kazanexpress.ru/mirsee-bijou - –ø–æ—Ç—Ä—è—Å–∞—é—â–∞—è –Ω–µ–¥–æ—Ä–æ–≥–∞—è –±–∏–∂—É—Ç–µ—Ä–∏—è. –°—Ç–∏–ª—å–Ω—ã–µ –∫–æ–ª—å—Ü–∞, '
                              '—Ü–µ–ø–æ—á–∫–∏, —Å–µ—Ä—ë–∂–∫–∏, —á–æ–∫–µ—Ä—ã –∏ –±—Ä–∞—Å–ª–µ—Ç—ã\n\n'
                              'https://kazanexpress.ru/akvilonia - —Ñ–∏—Ç–Ω–µ—Å —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –¥–ª—è'
                              ' –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –ª—É—á—à–µ–π —Ñ–æ—Ä–º—ã!',
                         reply_markup=markup)
        BOT.send_message(chat_id=message.chat.id,
                         text='–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ /menu')
    elif message.text == 'üéÅ –ö—ç—à–±—ç–∫ –∑–∞ –æ—Ç–∑—ã–≤ –¥–æ 100%':
        BOT.send_message(chat_id=message.chat.id,
                         text='1. –ù–∞–ø–∏—à–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ —Å 3 —Ö–æ—Ä–æ—à–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.\n'
                              '2. –í—ã–ª–æ–∂–∏ –æ—Ç–∑—ã–≤ –∏ –∫–æ–≥–¥–∞ –µ–≥–æ –æ–ø—É–±–ª–∏–∫—É—é—Ç (–ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å), —Å–∫–∏–Ω—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å '
                              '–æ—Ç–∑—ã–≤–æ–º –∏ –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É @mirsee.\n'
                              '–î–∞–ª–µ–µ –º—ã –≤–µ—Ä–Ω—ë–º –í–∞–º –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 100 —Ä—É–±–ª–µ–π.\n\n'
                              '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ /menu',
                         reply_markup=markup)
    elif message.text == 'üì≤ –ö–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω—Å–∞–º–∏ –∞–∫—Ü–∏–π':
        BOT.send_message(chat_id=message.chat.id,
                         text='–í—Å—Ç—É–ø–∞–π—Ç–µ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @kimmeriets —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –∞–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ '
                              '—Å–∫–∏–¥–∫–µ. –¢–∞–∫ –∂–µ —Ç–∞–º –º—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—ë–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ '
                              '–∫—É–ª–∏—Å–∞–º–∏ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã \n\n'
                              '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ /menu',
                         reply_markup=markup)
    elif message.text == '–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
        BOT.register_next_step_handler(message, enter_date_step)
        BOT.send_message(chat_id=message.chat.id,
                         text='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è. –í —Ñ–æ—Ä–º–∞—Ç–µ: 31.12.2022 22:00',
                         reply_markup=markup)
    elif message.text == '–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫':
        cur = DB.cursor()
        cur.execute("""SELECT last_send_date from chats WHERE chat_id=? 
                       """, (message.chat.id,))
        last_date = cur.fetchone()[0]
        date_time = datetime.fromtimestamp(last_date)
        BOT.send_message(chat_id=message.chat.id,
                         text=
                         f'{i[0][:15]}..., –¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {date_time}',
                         reply_markup=markup)

    else:
        BOT.send_message(chat_id=message.chat.id,
                         text='–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å ü§∑üèª‚Äç‚ôÇÔ∏è\n\n'
                              '–ü–µ—Ä–µ–π–¥–∏ –≤ /menu —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.',
                         reply_markup=markup)


def main():
    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', level=logging.INFO)
    global DB
    DB = sqlite3.connect('sqlite_bot.db', check_same_thread=False)
    cur = DB.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS chats(
       chat_id INT PRIMARY KEY,
       user_name TEXT,
       last_send_date timestamp);
    """)
    cur.execute("""CREATE TABLE IF NOT EXISTS messages(
           message_id INTEGER PRIMARY KEY,
           message_text TEXT,
           message_photo TEXT);
        """)
    DB.commit()

    global scheduler
    jobstores = {
        'default': SQLAlchemyJobStore(url='sqlite:///sqlite_bot.db')
    }
    executors = {
        'default': ThreadPoolExecutor(20),
    }
    job_defaults = {
        'coalesce': False,
        'max_instances': 3
    }
    scheduler = BackgroundScheduler(jobstores=jobstores, executors=executors, job_defaults=job_defaults, timezone=utc)
    scheduler.start()
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    BOT.polling(none_stop=True)


def insert_chat(chat_id: int, user_name: str):
    cur = DB.cursor()
    cur.execute("""SELECT chat_id from chats WHERE chat_id=?; """, (chat_id,))
    users = cur.fetchall()
    print(users)
    if not users:
        cur.execute("""INSERT INTO chats(chat_id, user_name) 
           VALUES(?, ?);""", (chat_id, user_name))
        DB.commit()


if __name__ == "__main__":
    main()
